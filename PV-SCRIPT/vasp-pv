#!/bin/bash --login

#PBS -N pna21-I
#PBS -l select=8
#PBS -l walltime=48:00:00
#PBS -A e05-surfin-wal
#PBS -q long

#Note: select = No. Nodes (e.g. 12 = 12*24 = 288 cores)

export OMP_NUM_THREADS=1
ulimit -s unlimited
module load vasp5

export NPROC=`qstat -f $PBS_JOBID | awk '/Resource_List.mpiprocs/ {print $3}'`

cd $PBS_O_WORKDIR
for dir in *
      do
    	cd $dir
	cp *POSCAR* POSCAR
	finished_ions=`grep equired OUTCAR.Ions.Tight | awk '{print $1}'`
	finished_latt=`grep equired OUTCAR.Ions.Tight | awk '{print $1}'`
	finished_totl=`grep equired OUTCAR.Ions.Tight | awk '{print $1}'`       # reached if done
	finished_pol=`grep 'Ionic dipole' OUTCAR.Polarisation | awk '{print $1}'`  # Ionic if done
	finished_hse_chg=`grep 'free  energy' OUTCAR.Charge | awk '{print $2}'` # energy if done
	finished_hse_bands=`grep 'free  energy' OUTCAR.Bands | awk '{print $2}'` # energy if done
	finished_hse_optics=`grep 'outermost' OUTCAR.Optics | awk '{print $2}'` # energy if done

	if [ "$finished_ions" == 'reached' ]
    	then
    	echo "Ions optimisation already done, skipping to lattice"
	else
    	cp INCAR.Ions INCAR
    	cp KPOINTS.Orig KPOINTS
    	aprun -n $NPROC ${HOME}/bin/vasp.5.3.archer > vasp.out
    	cp OUTCAR OUTCAR.Ions
    	cp CONTCAR CONTCAR.Ions
	fi

	if [ "$finished_latt" == 'reached' ]
    	then
    	echo "Lattice optimisation already done, skipping to lattice"
	else
    	cp INCAR.Lattice INCAR
    	cp KPOINTS.Orig KPOINTS
    	aprun -n $NPROC ${HOME}/bin/vasp.5.3.archer > vasp.out
    	cp OUTCAR OUTCAR.Lattice
    	cp CONTCAR CONTCAR.Lattice
	fi
	
	if [ "$finished_totl" == 'reached' ]
    	then
    	echo "All optimisation done already!"
	else
    	cp INCAR.Ions.Tight INCAR
    	aprun -n $NPROC ${HOME}/bin/vasp.5.3.archer > vasp.out
    	cp OUTCAR OUTCAR.Ions.Tight
    	cp CONTCAR CONTCAR.Ions.Tight
	fi
	
	if [ "$finished_pol" == 'Ionic' ]
    	then
    	echo "Polarisation done already!"
	else
    	cp INCAR.Polarisation INCAR
    	cp KPOINTS.Orig KPOINTS
    	aprun -n $NPROC ${HOME}/bin/vasp.5.3.archer > vasp.out
    	cp OUTCAR OUTCAR.Polarisation
	fi
	
	if [ "$finished_hse_chg" == 'energy' ]
    	then
    	echo "HSE-CHARGE done already!"
	else
    	cp INCAR.HSE0.Chg INCAR
    	cp KPOINTS.Orig KPOINTS
    	aprun -n $NPROC ${HOME}/bin/vasp.5.3.archer > vasp.out
    	cp OUTCAR OUTCAR.Charge
    	mv CHGCAR CHGCAR.HSE
    	mv WAVECAR WAVECAR.HSE
	fi
	if [ "$finished_hse_bands" == 'energy' ]
    	then
    	echo "HSE-bands done already!"
	else
    	mv CHGCAR.HSE CHGCAR
    	mv WAVECAR.HSE WAVECAR
    	cp INCAR.HSE0.Bands INCAR
    	awk '{if(NF ==4){print $0}}' IBZKPT > tmp
    	awk '{if(NF ==4){print $0}}' KPOINTS.band >> tmp
    	echo 'Script generated mesh' > KPOINTS
    	echo `wc -l tmp | awk '{print $1}'` >> KPOINTS
    	echo 'Reciprocal lattice' >> KPOINTS
    	cat tmp >> KPOINTS 
    	aprun -n $NPROC ${HOME}/bin/vasp.5.3.archer > vasp.out
    	cp OUTCAR OUTCAR.Bands
    	cp KPOINTS KPOINTS.Bands
    	mv PROCAR PROCAR.HSE
    	mv EIGENVAL EIGENVAL.HSE
    	mv DOSCAR DOS.HSE
    	mv LOCPOT LOCPOT.HSE
	fi
	
	if [ "$finished_hse_optics" == 'outermost' ]
    	then
    	echo "HSE-optics done already!"
	else
	# Set a higher number of bands for the Optics calc (double the standard)
	Bands=`grep NBANDS OUTCAR.Ions.Tight | head -1 | awk '{print $15}'`
	NewBands=`echo "$Bands * 2" | bc`
 	sed "s/NewBands/$NewBands/" INCAR.Optics > INCAR	
	# If possible it is good to have a denser k-point grid for Optics
	cp KPOINTS.Optics KPOINTS
	aprun -n $NPROC ${HOME}/bin/vasp.5.3.archer > vasp.out
	cp OUTCAR OUTCAR.Optics
        fi	
cd ../
done
